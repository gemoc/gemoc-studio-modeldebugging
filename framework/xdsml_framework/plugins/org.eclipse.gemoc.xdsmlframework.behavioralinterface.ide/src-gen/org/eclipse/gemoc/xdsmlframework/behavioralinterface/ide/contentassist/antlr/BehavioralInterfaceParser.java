/*
 * generated by Xtext 2.12.0
 */
package org.eclipse.gemoc.xdsmlframework.behavioralinterface.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.gemoc.xdsmlframework.behavioralinterface.ide.contentassist.antlr.internal.InternalBehavioralInterfaceParser;
import org.eclipse.gemoc.xdsmlframework.behavioralinterface.services.BehavioralInterfaceGrammarAccess;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class BehavioralInterfaceParser extends AbstractContentAssistParser {

	@Inject
	private BehavioralInterfaceGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalBehavioralInterfaceParser createParser() {
		InternalBehavioralInterfaceParser result = new InternalBehavioralInterfaceParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEventAccess().getAlternatives(), "rule__Event__Alternatives");
					put(grammarAccess.getInputEventAccess().getInterruptibleAlternatives_8_2_0(), "rule__InputEvent__InterruptibleAlternatives_8_2_0");
					put(grammarAccess.getBehavioralInterfaceAccess().getGroup(), "rule__BehavioralInterface__Group__0");
					put(grammarAccess.getInputEventAccess().getGroup(), "rule__InputEvent__Group__0");
					put(grammarAccess.getInputEventAccess().getGroup_7(), "rule__InputEvent__Group_7__0");
					put(grammarAccess.getInputEventAccess().getGroup_7_3(), "rule__InputEvent__Group_7_3__0");
					put(grammarAccess.getInputEventAccess().getGroup_8(), "rule__InputEvent__Group_8__0");
					put(grammarAccess.getInputEventAccess().getGroup_9(), "rule__InputEvent__Group_9__0");
					put(grammarAccess.getOutputEventAccess().getGroup(), "rule__OutputEvent__Group__0");
					put(grammarAccess.getOutputEventAccess().getGroup_7(), "rule__OutputEvent__Group_7__0");
					put(grammarAccess.getOutputEventAccess().getGroup_7_2(), "rule__OutputEvent__Group_7_2__0");
					put(grammarAccess.getEventParameterAccess().getGroup(), "rule__EventParameter__Group__0");
					put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
					put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
					put(grammarAccess.getBehavioralInterfaceAccess().getDslNameAssignment_1(), "rule__BehavioralInterface__DslNameAssignment_1");
					put(grammarAccess.getBehavioralInterfaceAccess().getEventsAssignment_2(), "rule__BehavioralInterface__EventsAssignment_2");
					put(grammarAccess.getInputEventAccess().getNameAssignment_1(), "rule__InputEvent__NameAssignment_1");
					put(grammarAccess.getInputEventAccess().getRuleDeclaringTypeAssignment_4(), "rule__InputEvent__RuleDeclaringTypeAssignment_4");
					put(grammarAccess.getInputEventAccess().getRuleAssignment_6(), "rule__InputEvent__RuleAssignment_6");
					put(grammarAccess.getInputEventAccess().getParamsAssignment_7_2(), "rule__InputEvent__ParamsAssignment_7_2");
					put(grammarAccess.getInputEventAccess().getParamsAssignment_7_3_1(), "rule__InputEvent__ParamsAssignment_7_3_1");
					put(grammarAccess.getInputEventAccess().getInterruptibleAssignment_8_2(), "rule__InputEvent__InterruptibleAssignment_8_2");
					put(grammarAccess.getInputEventAccess().getPreconditionDeclaringTypeAssignment_9_2(), "rule__InputEvent__PreconditionDeclaringTypeAssignment_9_2");
					put(grammarAccess.getInputEventAccess().getPreconditionAssignment_9_4(), "rule__InputEvent__PreconditionAssignment_9_4");
					put(grammarAccess.getOutputEventAccess().getNameAssignment_1(), "rule__OutputEvent__NameAssignment_1");
					put(grammarAccess.getOutputEventAccess().getRuleDeclaringTypeAssignment_4(), "rule__OutputEvent__RuleDeclaringTypeAssignment_4");
					put(grammarAccess.getOutputEventAccess().getRuleAssignment_6(), "rule__OutputEvent__RuleAssignment_6");
					put(grammarAccess.getOutputEventAccess().getParamsAssignment_7_1(), "rule__OutputEvent__ParamsAssignment_7_1");
					put(grammarAccess.getOutputEventAccess().getParamsAssignment_7_2_1(), "rule__OutputEvent__ParamsAssignment_7_2_1");
					put(grammarAccess.getEventParameterAccess().getNameAssignment_0(), "rule__EventParameter__NameAssignment_0");
					put(grammarAccess.getEventParameterAccess().getTypeAssignment_2(), "rule__EventParameter__TypeAssignment_2");
					put(grammarAccess.getEventParameterAccess().getManyAssignment_3(), "rule__EventParameter__ManyAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public BehavioralInterfaceGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BehavioralInterfaceGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
